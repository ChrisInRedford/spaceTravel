<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			width="600" height="400" minWidth="600" minHeight="400" backgroundColor="#E2DDDD"
			pageTitle="JavaScript ADK Example"
			initialize="doOnInit()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import DynaTraceFlashAdk;

			import flashx.textLayout.elements.FlowElement;

			import mx.events.FlexEvent;

			import spark.components.Image;
			import spark.components.RichText;
			import spark.primitives.BitmapImage;
			import spark.utils.TextFlowUtil;

			private var dynaTraceAdk:DynaTraceFlashAdk = new DynaTraceFlashAdk();
			private var currentActionName:String;
			private var loader:Loader;
			private var urlLoader:URLLoader;

			private function doOnInit(): void
			{
				this.addEventListener(FlexEvent.APPLICATION_COMPLETE, loadComplete);
			}

			private function loadComplete(event:FlexEvent): void
			{
				dynaTraceAdk.signalLoadEnd();
			}

			/**
			 * Example 1: Loader content using the UrlLoader class
			 */
			protected function loadContent(event:MouseEvent):void
			{
				var url:String = getAjaxUrl();
				currentActionName = dynaTraceAdk.enterAction("Click on \"Load Content using UrlLoader\"", "click");
				urlLoader = new URLLoader();
				var request:URLRequest = new URLRequest();
				dynaTraceAdk.prepareURLRequest(request);
				request.url = url;

				urlLoader.addEventListener(Event.COMPLETE, completeLoadContent);

				try {
					urlLoader.load(request);
				} catch (error:Error) {
					dynaTraceAdk.reportError("Error during load of image");
				}
			}

			protected function completeLoadContent(event:Event):void
			{
				result.removeAllElements();
				var textWidget:RichText = new RichText();
				textWidget.content = urlLoader.data + "\n";
				textWidget.x = 20;
				textWidget.y = 20;

				result.addElementAt(textWidget, 0);
				dynaTraceAdk.leaveAction(currentActionName);
			}

			/**
			 * Example 2: Load an image using the Loader class
			 */
			/**
			 * Load an external image and display it in the application
			 */
			protected function loadExternalImage(event:MouseEvent): void
			{
				currentActionName = dynaTraceAdk.enterAction("Click on \"Load external image using Loader\"", "click");
				loader = new Loader();
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoaderComplete);

				var imageUrl:String = "./chrome.png";
				var fileRequest:URLRequest = new URLRequest(imageUrl);
				dynaTraceAdk.prepareURLRequest(fileRequest);

				loader.load(fileRequest);
			}

			private function onLoaderComplete(e:Event):void
			{
				var bitmapImage:BitmapImage = new BitmapImage();
				result.removeAllElements()
				bitmapImage.source = Bitmap(loader.content);
				bitmapImage.x = 20;
				bitmapImage.y = 20;
				result.addElementAt(bitmapImage, 0);

				dynaTraceAdk.leaveAction(currentActionName);
			}

			private function getBaseUrl():String
			{
				var url:String = getCurrentUrl();
				var indexOfLastSeparator:int =  url.lastIndexOf("/");
				url = url.substring(0, indexOfLastSeparator + 1);
				return url;
			}

			private function getAjaxUrl():String
			{
				//ExternalInterface.call('alert', getBaseUrl());
				return getBaseUrl() + "sample.txt?x=" + Math.random();
			}

			protected function getCurrentUrl():String
			{
				return ExternalInterface.call('window.location.href.toString');
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Panel x="10" y="10" width="251" height="300" title="ADK Actions" id="panel">
		<s:Button x="10" y="10" width="228" height="32" label="Load Content using UrlLoader"
				click="loadContent(event)"/>
		<s:Button x="10" y="50" width="228" height="32" label="Load external image using Loader"
				click="loadExternalImage(event)"/>
	</s:Panel>
	<s:Panel x="260" y="10" width="251" height="300" title="Result" id="result">

	</s:Panel>
</s:Application>
