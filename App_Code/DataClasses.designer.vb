'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="spaceTravel")>  _
Partial Public Class DataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertpotus(instance As potus)
    End Sub
  Partial Private Sub Updatepotus(instance As potus)
    End Sub
  Partial Private Sub Deletepotus(instance As potus)
    End Sub
  Partial Private Sub Insertrevenue(instance As revenue)
    End Sub
  Partial Private Sub Updaterevenue(instance As revenue)
    End Sub
  Partial Private Sub Deleterevenue(instance As revenue)
    End Sub
  Partial Private Sub InsertRTBTF(instance As RTBTF)
    End Sub
  Partial Private Sub UpdateRTBTF(instance As RTBTF)
    End Sub
  Partial Private Sub DeleteRTBTF(instance As RTBTF)
    End Sub
  Partial Private Sub Insertlink(instance As link)
    End Sub
  Partial Private Sub Updatelink(instance As link)
    End Sub
  Partial Private Sub Deletelink(instance As link)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("spaceTravelConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property potus() As System.Data.Linq.Table(Of potus)
		Get
			Return Me.GetTable(Of potus)
		End Get
	End Property
	
	Public ReadOnly Property revenues() As System.Data.Linq.Table(Of revenue)
		Get
			Return Me.GetTable(Of revenue)
		End Get
	End Property
	
	Public ReadOnly Property RTBTFs() As System.Data.Linq.Table(Of RTBTF)
		Get
			Return Me.GetTable(Of RTBTF)
		End Get
	End Property
	
	Public ReadOnly Property dynatrace_categories() As System.Data.Linq.Table(Of dynatrace_category)
		Get
			Return Me.GetTable(Of dynatrace_category)
		End Get
	End Property
	
	Public ReadOnly Property links() As System.Data.Linq.Table(Of link)
		Get
			Return Me.GetTable(Of link)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.potus")>  _
Partial Public Class potus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _president_id As Integer
	
	Private _president_name_common As String
	
	Private _president_name_birth As String
	
	Private _president_number As System.Nullable(Of Integer)
	
	Private _president_term_start As System.Nullable(Of Date)
	
	Private _president_term_end As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onpresident_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onpresident_idChanged()
    End Sub
    Partial Private Sub Onpresident_name_commonChanging(value As String)
    End Sub
    Partial Private Sub Onpresident_name_commonChanged()
    End Sub
    Partial Private Sub Onpresident_name_birthChanging(value As String)
    End Sub
    Partial Private Sub Onpresident_name_birthChanged()
    End Sub
    Partial Private Sub Onpresident_numberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpresident_numberChanged()
    End Sub
    Partial Private Sub Onpresident_term_startChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpresident_term_startChanged()
    End Sub
    Partial Private Sub Onpresident_term_endChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpresident_term_endChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property president_id() As Integer
		Get
			Return Me._president_id
		End Get
		Set
			If ((Me._president_id = value)  _
						= false) Then
				Me.Onpresident_idChanging(value)
				Me.SendPropertyChanging
				Me._president_id = value
				Me.SendPropertyChanged("president_id")
				Me.Onpresident_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_name_common", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property president_name_common() As String
		Get
			Return Me._president_name_common
		End Get
		Set
			If (String.Equals(Me._president_name_common, value) = false) Then
				Me.Onpresident_name_commonChanging(value)
				Me.SendPropertyChanging
				Me._president_name_common = value
				Me.SendPropertyChanged("president_name_common")
				Me.Onpresident_name_commonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_name_birth", DbType:="VarChar(50)")>  _
	Public Property president_name_birth() As String
		Get
			Return Me._president_name_birth
		End Get
		Set
			If (String.Equals(Me._president_name_birth, value) = false) Then
				Me.Onpresident_name_birthChanging(value)
				Me.SendPropertyChanging
				Me._president_name_birth = value
				Me.SendPropertyChanged("president_name_birth")
				Me.Onpresident_name_birthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_number", DbType:="Int")>  _
	Public Property president_number() As System.Nullable(Of Integer)
		Get
			Return Me._president_number
		End Get
		Set
			If (Me._president_number.Equals(value) = false) Then
				Me.Onpresident_numberChanging(value)
				Me.SendPropertyChanging
				Me._president_number = value
				Me.SendPropertyChanged("president_number")
				Me.Onpresident_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_term_start", DbType:="DateTime")>  _
	Public Property president_term_start() As System.Nullable(Of Date)
		Get
			Return Me._president_term_start
		End Get
		Set
			If (Me._president_term_start.Equals(value) = false) Then
				Me.Onpresident_term_startChanging(value)
				Me.SendPropertyChanging
				Me._president_term_start = value
				Me.SendPropertyChanged("president_term_start")
				Me.Onpresident_term_startChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_president_term_end", DbType:="DateTime")>  _
	Public Property president_term_end() As System.Nullable(Of Date)
		Get
			Return Me._president_term_end
		End Get
		Set
			If (Me._president_term_end.Equals(value) = false) Then
				Me.Onpresident_term_endChanging(value)
				Me.SendPropertyChanging
				Me._president_term_end = value
				Me.SendPropertyChanged("president_term_end")
				Me.Onpresident_term_endChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.revenue")>  _
Partial Public Class revenue
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _revenue_id As Integer
	
	Private _revenue_desc As String
	
	Private _revenue_amount As Decimal
	
	Private _revenue_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onrevenue_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onrevenue_idChanged()
    End Sub
    Partial Private Sub Onrevenue_descChanging(value As String)
    End Sub
    Partial Private Sub Onrevenue_descChanged()
    End Sub
    Partial Private Sub Onrevenue_amountChanging(value As Decimal)
    End Sub
    Partial Private Sub Onrevenue_amountChanged()
    End Sub
    Partial Private Sub Onrevenue_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onrevenue_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property revenue_id() As Integer
		Get
			Return Me._revenue_id
		End Get
		Set
			If ((Me._revenue_id = value)  _
						= false) Then
				Me.Onrevenue_idChanging(value)
				Me.SendPropertyChanging
				Me._revenue_id = value
				Me.SendPropertyChanged("revenue_id")
				Me.Onrevenue_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_desc", DbType:="VarChar(50)")>  _
	Public Property revenue_desc() As String
		Get
			Return Me._revenue_desc
		End Get
		Set
			If (String.Equals(Me._revenue_desc, value) = false) Then
				Me.Onrevenue_descChanging(value)
				Me.SendPropertyChanging
				Me._revenue_desc = value
				Me.SendPropertyChanged("revenue_desc")
				Me.Onrevenue_descChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_amount", DbType:="Money NOT NULL")>  _
	Public Property revenue_amount() As Decimal
		Get
			Return Me._revenue_amount
		End Get
		Set
			If ((Me._revenue_amount = value)  _
						= false) Then
				Me.Onrevenue_amountChanging(value)
				Me.SendPropertyChanging
				Me._revenue_amount = value
				Me.SendPropertyChanged("revenue_amount")
				Me.Onrevenue_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_revenue_date", DbType:="DateTime")>  _
	Public Property revenue_date() As System.Nullable(Of Date)
		Get
			Return Me._revenue_date
		End Get
		Set
			If (Me._revenue_date.Equals(value) = false) Then
				Me.Onrevenue_dateChanging(value)
				Me.SendPropertyChanging
				Me._revenue_date = value
				Me.SendPropertyChanged("revenue_date")
				Me.Onrevenue_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RTBTF")>  _
Partial Public Class RTBTF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _rtbtf_id As Integer
	
	Private _rtbtf_raw As String
	
	Private _rtbtf_datetime As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onrtbtf_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onrtbtf_idChanged()
    End Sub
    Partial Private Sub Onrtbtf_rawChanging(value As String)
    End Sub
    Partial Private Sub Onrtbtf_rawChanged()
    End Sub
    Partial Private Sub Onrtbtf_datetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onrtbtf_datetimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rtbtf_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property rtbtf_id() As Integer
		Get
			Return Me._rtbtf_id
		End Get
		Set
			If ((Me._rtbtf_id = value)  _
						= false) Then
				Me.Onrtbtf_idChanging(value)
				Me.SendPropertyChanging
				Me._rtbtf_id = value
				Me.SendPropertyChanged("rtbtf_id")
				Me.Onrtbtf_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rtbtf_raw", DbType:="VarChar(MAX)")>  _
	Public Property rtbtf_raw() As String
		Get
			Return Me._rtbtf_raw
		End Get
		Set
			If (String.Equals(Me._rtbtf_raw, value) = false) Then
				Me.Onrtbtf_rawChanging(value)
				Me.SendPropertyChanging
				Me._rtbtf_raw = value
				Me.SendPropertyChanged("rtbtf_raw")
				Me.Onrtbtf_rawChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rtbtf_datetime", DbType:="DateTime")>  _
	Public Property rtbtf_datetime() As System.Nullable(Of Date)
		Get
			Return Me._rtbtf_datetime
		End Get
		Set
			If (Me._rtbtf_datetime.Equals(value) = false) Then
				Me.Onrtbtf_datetimeChanging(value)
				Me.SendPropertyChanging
				Me._rtbtf_datetime = value
				Me.SendPropertyChanged("rtbtf_datetime")
				Me.Onrtbtf_datetimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[dynatrace-category]")>  _
Partial Public Class dynatrace_category
	
	Private _category_id As Integer
	
	Private _category_name As String
	
	Private _category_description As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category_id", DbType:="Int NOT NULL")>  _
	Public Property category_id() As Integer
		Get
			Return Me._category_id
		End Get
		Set
			If ((Me._category_id = value)  _
						= false) Then
				Me._category_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category_name", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property category_name() As String
		Get
			Return Me._category_name
		End Get
		Set
			If (String.Equals(Me._category_name, value) = false) Then
				Me._category_name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category_description", DbType:="VarChar(5000)")>  _
	Public Property category_description() As String
		Get
			Return Me._category_description
		End Get
		Set
			If (String.Equals(Me._category_description, value) = false) Then
				Me._category_description = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.link")>  _
Partial Public Class link
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _link_id As Integer
	
	Private _link_name As String
	
	Private _link_url As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onlink_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onlink_idChanged()
    End Sub
    Partial Private Sub Onlink_nameChanging(value As String)
    End Sub
    Partial Private Sub Onlink_nameChanged()
    End Sub
    Partial Private Sub Onlink_urlChanging(value As String)
    End Sub
    Partial Private Sub Onlink_urlChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_link_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property link_id() As Integer
		Get
			Return Me._link_id
		End Get
		Set
			If ((Me._link_id = value)  _
						= false) Then
				Me.Onlink_idChanging(value)
				Me.SendPropertyChanging
				Me._link_id = value
				Me.SendPropertyChanged("link_id")
				Me.Onlink_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_link_name", DbType:="VarChar(500)")>  _
	Public Property link_name() As String
		Get
			Return Me._link_name
		End Get
		Set
			If (String.Equals(Me._link_name, value) = false) Then
				Me.Onlink_nameChanging(value)
				Me.SendPropertyChanging
				Me._link_name = value
				Me.SendPropertyChanged("link_name")
				Me.Onlink_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_link_url", DbType:="VarChar(5000) NOT NULL", CanBeNull:=false)>  _
	Public Property link_url() As String
		Get
			Return Me._link_url
		End Get
		Set
			If (String.Equals(Me._link_url, value) = false) Then
				Me.Onlink_urlChanging(value)
				Me.SendPropertyChanging
				Me._link_url = value
				Me.SendPropertyChanged("link_url")
				Me.Onlink_urlChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
